{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵtemplate(2, LoginComponent_div_14_div_2_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, LoginComponent_div_22_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Login failed. Please check your credentials. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router) {\n      this.router = router;\n      this.email = '';\n      this.password = '';\n      this.loginFailed = false;\n    }\n    ngOnInit() {\n      console.log('LoginComponent initialized');\n    }\n    onSubmit() {\n      if (this.email && this.password) {\n        // Mock successful login\n        this.loginFailed = false;\n        // Navigate to dashboard\n        this.router.navigate(['user-dashboard']).then(() => {\n          console.log('Navigation completed');\n        }).catch(error => {\n          console.error('Navigation error:', error);\n        });\n      } else {\n        this.loginFailed = true;\n      }\n    }\n    goToRegistration() {\n      this.router.navigate(['/registration']);\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 36,\n    vars: 5,\n    consts: [[1, \"min-h-screen\", \"w-full\", \"px-4\", \"py-4\", \"flex\", \"flex-col\", \"items-center\", \"justify-center\"], [1, \"w-full\", \"max-w-[327px]\", \"bg-surface\", \"rounded-2xl\", \"shadow-lg\", \"p-6\"], [\"src\", \"assets/logo_icon.svg\", \"alt\", \"Logo\", 1, \"w-16\", \"h-16\", \"mx-auto\", \"mb-4\"], [1, \"text-2xl\", \"font-bold\", \"mb-4\", \"text-center\"], [1, \"space-y-4\", \"w-full\", 3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"input-container\", \"w-full\"], [\"for\", \"email\", 1, \"input-label\"], [1, \"input-field\"], [1, \"input-content\"], [\"id\", \"email\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", \"autocomplete\", \"email\", \"placeholder\", \"Enter your email\", 1, \"input-element\", 3, \"ngModel\", \"ngModelChange\"], [\"emailInput\", \"ngModel\"], [\"class\", \"input-support text-red-500\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"input-label\"], [\"id\", \"password\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"autocomplete\", \"current-password\", \"placeholder\", \"Enter your password\", 1, \"input-element\", 3, \"ngModel\", \"ngModelChange\"], [\"passwordInput\", \"ngModel\"], [1, \"input-field\", \"bg-surface/50\"], [1, \"input-content\", \"justify-center\"], [1, \"text-sm\", \"text-textSecondary\"], [\"type\", \"submit\", 1, \"w-full\", \"h-12\", \"bg-accent\", \"text-black\", \"font-bold\", \"rounded-xl\", \"hover:bg-accent/90\", \"transition-colors\", \"duration-200\", \"shadow-md\"], [1, \"flex\", \"justify-between\", \"mt-4\", \"text-sm\"], [\"routerLink\", \"/registration\", 1, \"text-accent\", \"hover:underline\"], [\"href\", \"#\", 1, \"text-accent\", \"hover:underline\"], [\"class\", \"mt-3 text-center text-red-500 text-sm font-semibold\", 4, \"ngIf\"], [1, \"input-support\", \"text-red-500\"], [4, \"ngIf\"], [1, \"mt-3\", \"text-center\", \"text-red-500\", \"text-sm\", \"font-semibold\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementStart(3, \"h2\", 3);\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 3, 2, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 13);\n        i0.ɵɵtext(17, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 8)(19, \"div\", 9)(20, \"input\", 14, 15);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(22, LoginComponent_div_22_Template, 2, 1, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 6)(24, \"div\", 16)(25, \"div\", 17)(26, \"span\", 18);\n        i0.ɵɵtext(27, \" [Simulated Captcha] Verify you are human \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(28, \"button\", 19);\n        i0.ɵɵtext(29, \" Login \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 20)(31, \"a\", 21);\n        i0.ɵɵtext(32, \"Create account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"a\", 22);\n        i0.ɵɵtext(34, \"Forgot password?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(35, LoginComponent_div_35_Template, 2, 0, \"div\", 23);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(13);\n        const _r3 = i0.ɵɵreference(21);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r3.invalid && (_r3.dirty || _r3.touched));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginFailed);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.EmailValidator, i3.NgModel, i3.NgForm, i1.RouterLink],\n    styles: [\"ninput[_ngcontent-%COMP%]{height:48px!important}button[_ngcontent-%COMP%]{height:48px!important}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}