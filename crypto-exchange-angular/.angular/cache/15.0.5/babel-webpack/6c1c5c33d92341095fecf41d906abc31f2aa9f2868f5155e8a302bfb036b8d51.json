{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction RegistrationComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, RegistrationComponent_div_11_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_11_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.registrationForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.registrationForm.controls.email.errors.email);\n  }\n}\nfunction RegistrationComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, RegistrationComponent_div_20_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_20_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registrationForm.controls.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registrationForm.controls.password.errors.minlength);\n  }\n}\nfunction RegistrationComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Account created. Access will be granted after manager verification. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let RegistrationComponent = /*#__PURE__*/(() => {\n  class RegistrationComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.submitted = false;\n      this.accountCreated = false;\n      this.registrationForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n    onSubmit() {\n      this.submitted = true;\n      if (this.registrationForm.valid) {\n        this.accountCreated = true;\n      }\n    }\n  }\n  RegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n    return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  RegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationComponent,\n    selectors: [[\"app-registration\"]],\n    decls: 34,\n    vars: 4,\n    consts: [[1, \"min-h-screen\", \"w-full\", \"px-4\", \"py-8\", \"flex\", \"flex-col\", \"items-center\", \"justify-center\"], [1, \"w-full\", \"max-w-[327px]\", \"bg-surface\", \"rounded-2xl\", \"shadow-lg\", \"p-6\"], [1, \"text-2xl\", \"font-bold\", \"mb-8\", \"text-center\"], [1, \"space-y-6\", 3, \"formGroup\", \"ngSubmit\"], [1, \"input-container\"], [\"for\", \"email\", 1, \"input-label\"], [1, \"input-field\"], [1, \"input-content\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"autocomplete\", \"email\", \"placeholder\", \"Enter your email\", 1, \"input-element\"], [\"class\", \"input-support text-red-500\", 4, \"ngIf\"], [1, \"input-support\"], [\"for\", \"password\", 1, \"input-label\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"new-password\", \"placeholder\", \"Create a password\", 1, \"input-element\"], [1, \"input-field\", \"bg-surface/50\"], [1, \"input-content\", \"justify-center\"], [1, \"text-sm\", \"text-textSecondary\"], [\"type\", \"submit\", 1, \"w-full\", \"h-12\", \"bg-accent\", \"text-black\", \"font-bold\", \"rounded-xl\", \"hover:bg-accent/90\", \"transition-colors\", \"duration-200\", \"shadow-md\"], [1, \"mt-6\", \"text-center\", \"text-sm\"], [1, \"text-textSecondary\"], [\"routerLink\", \"/login\", 1, \"ml-2\", \"text-accent\", \"hover:underline\"], [\"class\", \"mt-6 p-4 bg-accent/10 border border-accent rounded-xl text-center text-sm text-accent\", 4, \"ngIf\"], [1, \"input-support\", \"text-red-500\"], [4, \"ngIf\"], [1, \"mt-6\", \"p-4\", \"bg-accent/10\", \"border\", \"border-accent\", \"rounded-xl\", \"text-center\", \"text-sm\", \"text-accent\"]],\n    template: function RegistrationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"User Registration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, RegistrationComponent_div_11_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementStart(12, \"p\", 10);\n        i0.ɵɵtext(13, \"Please make sure your email is the same as Incore account email.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 11);\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"div\", 7);\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, RegistrationComponent_div_20_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 4)(22, \"div\", 13)(23, \"div\", 14)(24, \"span\", 15);\n        i0.ɵɵtext(25, \" [Simulated Captcha] Verify you are human \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(26, \"button\", 16);\n        i0.ɵɵtext(27, \" Request code \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 17)(29, \"span\", 18);\n        i0.ɵɵtext(30, \"Already have an account?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"a\", 19);\n        i0.ɵɵtext(32, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(33, RegistrationComponent_div_33_Template, 2, 0, \"div\", 20);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.registrationForm.controls.email.errors);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.registrationForm.controls.password.errors);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.accountCreated);\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink]\n  });\n  return RegistrationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}