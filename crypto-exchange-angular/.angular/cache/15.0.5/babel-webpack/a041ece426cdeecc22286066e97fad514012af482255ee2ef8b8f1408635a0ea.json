{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction BottomNavComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"nav\", 2)(2, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function BottomNavComponent_div_0_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selectTab(\"wallet\"));\n    });\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementStart(4, \"span\", 5);\n    i0.ɵɵtext(5, \"Wallet\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function BottomNavComponent_div_0_Template_div_click_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectTab(\"settings\"));\n    });\n    i0.ɵɵelement(7, \"img\", 7);\n    i0.ɵɵelementStart(8, \"span\", 5);\n    i0.ɵɵtext(9, \"Settings\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"active\", ctx_r0.activeTab === \"wallet\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.activeTab === \"wallet\" ? \"assets/wallet_selected.svg\" : \"assets/wallet_deselected.svg\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"active\", ctx_r0.activeTab === \"settings\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.activeTab === \"settings\" ? \"assets/settings_selected.svg\" : \"assets/settings_deselected.svg\", i0.ɵɵsanitizeUrl);\n  }\n}\nexport let BottomNavComponent = /*#__PURE__*/(() => {\n  class BottomNavComponent {\n    constructor(router) {\n      this.router = router;\n      this.activeTab = 'wallet';\n      this.showNav = false;\n      // Listen to route changes to determine if nav should be shown\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        const hideNavRoutes = ['/login', '/registration'];\n        this.showNav = !hideNavRoutes.includes(event.url);\n        // Update active tab based on current route\n        if (event.url.includes('settings')) {\n          this.activeTab = 'settings';\n        } else if (event.url.includes('user-dashboard')) {\n          this.activeTab = 'wallet';\n        }\n      });\n    }\n    ngOnInit() {}\n    selectTab(tab) {\n      this.activeTab = tab;\n      try {\n        if (tab === 'wallet') {\n          this.router.navigate(['/user-dashboard']);\n        } else if (tab === 'settings') {\n          this.router.navigate(['/settings']);\n        }\n      } catch (error) {\n        console.error('Navigation error:', error);\n      }\n    }\n    openTopUp() {\n      try {\n        alert('Top Up modal triggered');\n      } catch (error) {\n        console.error('Error opening Top Up modal:', error);\n      }\n    }\n    openSell() {\n      try {\n        alert('Sell modal triggered');\n      } catch (error) {\n        console.error('Error opening Sell modal:', error);\n      }\n    }\n  }\n  BottomNavComponent.ɵfac = function BottomNavComponent_Factory(t) {\n    return new (t || BottomNavComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  BottomNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BottomNavComponent,\n    selectors: [[\"app-bottom-nav\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"bottom-nav-container\", 4, \"ngIf\"], [1, \"bottom-nav-container\"], [1, \"tab-bar\"], [\"role\", \"button\", \"tabindex\", \"0\", \"aria-label\", \"Wallet Tab\", 1, \"tab-item\", 3, \"click\"], [\"alt\", \"Wallet Icon\", 1, \"tab-icon\", 3, \"src\"], [1, \"tab-text\"], [\"role\", \"button\", \"tabindex\", \"0\", \"aria-label\", \"Settings Tab\", 1, \"tab-item\", 3, \"click\"], [\"alt\", \"Settings Icon\", 1, \"tab-icon\", 3, \"src\"]],\n    template: function BottomNavComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, BottomNavComponent_div_0_Template, 10, 6, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showNav);\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\".bottom-nav-container[_ngcontent-%COMP%]{position:fixed;bottom:0;left:0;right:0;z-index:50}.fixed-action-buttons[_ngcontent-%COMP%]{position:fixed;bottom:104px;left:16px;right:16px;display:flex;gap:24px}.action-button[_ngcontent-%COMP%]{flex:1;height:48px;background-color:#e9b245;border:none;border-radius:12px;display:flex;align-items:center;justify-content:center;gap:8px;padding:0 16px;cursor:pointer;transition:all .2s ease;color:#fff;font-weight:500}.action-button[_ngcontent-%COMP%]:hover{background-color:#d1a93d;box-shadow:0 2px 4px #0000001a}.action-button[_ngcontent-%COMP%]:active{transform:translateY(1px)}.action-icon[_ngcontent-%COMP%]{width:24px;height:24px}.action-text[_ngcontent-%COMP%]{font-size:14px;font-weight:600}.tab-bar[_ngcontent-%COMP%]{height:88px;background-color:#4a4c5b;border-top:1px solid #5F6069;box-shadow:0 -4px 7px #00000040;display:flex;justify-content:space-around;align-items:center;padding:0 16px;position:fixed;bottom:0;left:0;right:0}.tab-item[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:4px;cursor:pointer;color:#afafaf;transition:color .2s ease;padding:8px;border-radius:8px;min-width:64px}.tab-item[_ngcontent-%COMP%]:hover, .tab-item.active[_ngcontent-%COMP%]{color:#e9b245}.tab-icon[_ngcontent-%COMP%]{width:24px;height:24px}.tab-text[_ngcontent-%COMP%]{font-size:12px;font-weight:500}@media (max-width: 480px){.fixed-action-buttons[_ngcontent-%COMP%]{flex-direction:column;bottom:104px}.action-button[_ngcontent-%COMP%]{width:100%}}.tab-item[_ngcontent-%COMP%]:focus, .action-button[_ngcontent-%COMP%]:focus{outline:2px solid #E9B245;outline-offset:2px}.tab-item[_ngcontent-%COMP%], .action-button[_ngcontent-%COMP%]{min-height:48px;min-width:48px}\"]\n  });\n  return BottomNavComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}